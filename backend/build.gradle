apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'application'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

javadoc {
    options.addBooleanOption('html5', true)
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}

task javadocsJar(type: Jar, dependsOn: javadoc, description: 'Creates a jar from the javadocs files.') {
    from javadoc.destinationDir
    archiveClassifier.set('javadoc')
}

task sourcesJar(type: Jar, dependsOn: classes, description: 'Creates a jar from the source files.') {
    from sourceSets.main.allJava
    archiveClassifier.set('sources')
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocsJar
}

archivesBaseName = 'ignis-backend'
version = '1.0'
publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'org.ignis'
            artifactId = archivesBaseName
            version = version
            from components.java
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":scheduler-api")
    implementation project(":properties")
    implementation group: 'org.apache.thrift', name: 'libthrift', version: '0.15.0'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.14.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
    implementation group: 'com.github.mwiede', name: 'jsch', version: '0.2.1'

    //testCompile group: 'junit', name: 'junit', version: '4.12'
    //testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.1'
    //testCompile group: 'org.mockito', name: 'mockito-core', version: '2.22.0'
    //testRuntimeOnly group : 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.1'
}

/*
test {
    useJUnitPlatform{
        includeEngines 'junit-jupiter'
    }
}*/

task jarAndLibs(type: Copy, description: 'Copy project dependencies.') {
    dependsOn "jar"
    delete("$buildDir/jarAndLibs")
    from project.configurations.runtimeClasspath
    into "$buildDir/jarAndLibs"
}
